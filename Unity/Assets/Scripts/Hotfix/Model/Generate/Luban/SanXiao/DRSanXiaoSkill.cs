//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Hotfix.Bright.Serialization;
using System.Collections.Generic;



namespace Hotfix.Model.SanXiao
{

public sealed partial class DRSanXiaoSkill :  Bright.Config.BeanBase 
{
    public DRSanXiaoSkill(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        Desc = _buf.ReadString();
        EffectDesc = _buf.ReadString();
        EffectTarget = _buf.ReadInt();
        EffectMoment = _buf.ReadInt();
        CheckTargetCamp = _buf.ReadInt();
        CheckCondition = _buf.ReadString();
        TriggerRatio = _buf.ReadInt();
        TargetCamp = _buf.ReadInt();
        TargetSelectionAction = _buf.ReadString();
        TargetCondition = _buf.ReadString();
        TargetNum = _buf.ReadString();
        EffectCamp = _buf.ReadInt();
        EffectRange = _buf.ReadInt();
        EffectAction = _buf.ReadString();
        PostInit();
    }

    public static DRSanXiaoSkill DeserializeDRSanXiaoSkill(ByteBuf _buf)
    {
        return new SanXiao.DRSanXiaoSkill(_buf);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 介绍
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 技能效果
    /// </summary>
    public string EffectDesc { get; private set; }
    /// <summary>
    /// 生效目标
    /// </summary>
    public int EffectTarget { get; private set; }
    /// <summary>
    /// 生效时机
    /// </summary>
    public int EffectMoment { get; private set; }
    /// <summary>
    /// 检查目标（未用到）
    /// </summary>
    public int CheckTargetCamp { get; private set; }
    /// <summary>
    /// 检查条件
    /// </summary>
    public string CheckCondition { get; private set; }
    /// <summary>
    /// 触发概率
    /// </summary>
    public int TriggerRatio { get; private set; }
    /// <summary>
    /// 技能选择目标
    /// </summary>
    public int TargetCamp { get; private set; }
    /// <summary>
    /// 选择目标方法
    /// </summary>
    public string TargetSelectionAction { get; private set; }
    /// <summary>
    /// 选择目标检查
    /// </summary>
    public string TargetCondition { get; private set; }
    /// <summary>
    /// 选择目标数量
    /// </summary>
    public string TargetNum { get; private set; }
    /// <summary>
    /// 技能作用目标
    /// </summary>
    public int EffectCamp { get; private set; }
    /// <summary>
    /// 作用范围
    /// </summary>
    public int EffectRange { get; private set; }
    /// <summary>
    /// 作用效果
    /// </summary>
    public string EffectAction { get; private set; }

    public const int __ID__ = 1732757871;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Desc:" + Desc + ","
        + "EffectDesc:" + EffectDesc + ","
        + "EffectTarget:" + EffectTarget + ","
        + "EffectMoment:" + EffectMoment + ","
        + "CheckTargetCamp:" + CheckTargetCamp + ","
        + "CheckCondition:" + CheckCondition + ","
        + "TriggerRatio:" + TriggerRatio + ","
        + "TargetCamp:" + TargetCamp + ","
        + "TargetSelectionAction:" + TargetSelectionAction + ","
        + "TargetCondition:" + TargetCondition + ","
        + "TargetNum:" + TargetNum + ","
        + "EffectCamp:" + EffectCamp + ","
        + "EffectRange:" + EffectRange + ","
        + "EffectAction:" + EffectAction + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
