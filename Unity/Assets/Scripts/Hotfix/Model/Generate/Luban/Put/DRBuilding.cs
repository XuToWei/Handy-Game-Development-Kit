//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Hotfix.Bright.Serialization;
using System.Collections.Generic;



namespace Hotfix.Model.Put
{

public sealed partial class DRBuilding :  Bright.Config.BeanBase 
{
    public DRBuilding(ByteBuf _buf) 
    {
        ID = _buf.ReadInt();
        TypeId = _buf.ReadInt();
        Name = _buf.ReadString();
        Icon = _buf.ReadString();
        Desc = _buf.ReadString();
        BuildingCost = _buf.ReadInt();
        Level = _buf.ReadInt();
        TimeInterval = _buf.ReadInt();
        CostBuildingPoint = _buf.ReadInt();
        BuildingCondition = _buf.ReadString();
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);Type1 = new System.Collections.Generic.List<Int2>(n);for(var i = 0 ; i < n ; i++) { Int2 _e;  _e = Int2.DeserializeInt2(_buf); Type1.Add(_e);}}
        Volume1 = _buf.ReadFloat();
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);Type2 = new System.Collections.Generic.List<Int2>(n);for(var i = 0 ; i < n ; i++) { Int2 _e;  _e = Int2.DeserializeInt2(_buf); Type2.Add(_e);}}
        Volume2 = _buf.ReadFloat();
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);Type3 = new System.Collections.Generic.List<Int2>(n);for(var i = 0 ; i < n ; i++) { Int2 _e;  _e = Int2.DeserializeInt2(_buf); Type3.Add(_e);}}
        Volume3 = _buf.ReadFloat();
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);Type4 = new System.Collections.Generic.List<Int2>(n);for(var i = 0 ; i < n ; i++) { Int2 _e;  _e = Int2.DeserializeInt2(_buf); Type4.Add(_e);}}
        Volume4 = _buf.ReadFloat();
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);Type5 = new System.Collections.Generic.List<Int2>(n);for(var i = 0 ; i < n ; i++) { Int2 _e;  _e = Int2.DeserializeInt2(_buf); Type5.Add(_e);}}
        Volume5 = _buf.ReadFloat();
        PostInit();
    }

    public static DRBuilding DeserializeDRBuilding(ByteBuf _buf)
    {
        return new Put.DRBuilding(_buf);
    }

    /// <summary>
    /// 建筑ID
    /// </summary>
    public int ID { get; private set; }
    /// <summary>
    /// 建筑类型
    /// </summary>
    public int TypeId { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 图标
    /// </summary>
    public string Icon { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 升到下一级消耗建设点数
    /// </summary>
    public int BuildingCost { get; private set; }
    /// <summary>
    /// 显示等级
    /// </summary>
    public int Level { get; private set; }
    /// <summary>
    /// 产出时间间隔
    /// </summary>
    public int TimeInterval { get; private set; }
    /// <summary>
    /// 消耗建设点数
    /// </summary>
    public int CostBuildingPoint { get; private set; }
    /// <summary>
    /// 其它前置条件
    /// </summary>
    public string BuildingCondition { get; private set; }
    /// <summary>
    /// 产出垃圾类型
    /// </summary>
    public System.Collections.Generic.List<Int2> Type1 { get; private set; }
    /// <summary>
    /// 垃圾体积上限
    /// </summary>
    public float Volume1 { get; private set; }
    /// <summary>
    /// 需求快递类型
    /// </summary>
    public System.Collections.Generic.List<Int2> Type2 { get; private set; }
    /// <summary>
    /// 快递柜上限
    /// </summary>
    public float Volume2 { get; private set; }
    /// <summary>
    /// 需求外卖数量
    /// </summary>
    public System.Collections.Generic.List<Int2> Type3 { get; private set; }
    /// <summary>
    /// 外卖柜上限
    /// </summary>
    public float Volume3 { get; private set; }
    /// <summary>
    /// 需求修理类型
    /// </summary>
    public System.Collections.Generic.List<Int2> Type4 { get; private set; }
    /// <summary>
    /// 修理订单上限
    /// </summary>
    public float Volume4 { get; private set; }
    /// <summary>
    /// 客运需求类型
    /// </summary>
    public System.Collections.Generic.List<Int2> Type5 { get; private set; }
    /// <summary>
    /// 客运量上限
    /// </summary>
    public float Volume5 { get; private set; }

    public const int __ID__ = -456517183;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in Type1) { _e?.Resolve(_tables); }
        foreach(var _e in Type2) { _e?.Resolve(_tables); }
        foreach(var _e in Type3) { _e?.Resolve(_tables); }
        foreach(var _e in Type4) { _e?.Resolve(_tables); }
        foreach(var _e in Type5) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in Type1) { _e?.TranslateText(translator); }
        foreach(var _e in Type2) { _e?.TranslateText(translator); }
        foreach(var _e in Type3) { _e?.TranslateText(translator); }
        foreach(var _e in Type4) { _e?.TranslateText(translator); }
        foreach(var _e in Type5) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "TypeId:" + TypeId + ","
        + "Name:" + Name + ","
        + "Icon:" + Icon + ","
        + "Desc:" + Desc + ","
        + "BuildingCost:" + BuildingCost + ","
        + "Level:" + Level + ","
        + "TimeInterval:" + TimeInterval + ","
        + "CostBuildingPoint:" + CostBuildingPoint + ","
        + "BuildingCondition:" + BuildingCondition + ","
        + "Type1:" + Bright.Common.StringUtil.CollectionToString(Type1) + ","
        + "Volume1:" + Volume1 + ","
        + "Type2:" + Bright.Common.StringUtil.CollectionToString(Type2) + ","
        + "Volume2:" + Volume2 + ","
        + "Type3:" + Bright.Common.StringUtil.CollectionToString(Type3) + ","
        + "Volume3:" + Volume3 + ","
        + "Type4:" + Bright.Common.StringUtil.CollectionToString(Type4) + ","
        + "Volume4:" + Volume4 + ","
        + "Type5:" + Bright.Common.StringUtil.CollectionToString(Type5) + ","
        + "Volume5:" + Volume5 + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
